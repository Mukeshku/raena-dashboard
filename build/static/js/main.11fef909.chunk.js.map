{"version":3,"sources":["components/Summary/SummaryCard.js","components/common/RangeDatePicker.js","network/api/API.js","constants/index.js","Utils/ApiUtils.js","Utils/SummaryUtils.js","Utils/DateUtils.js","views/Summary.js","components/MutiSelect/AsyncMulti.js","components/Summary/BarCard.js","views/UserLevelSummary.js","routes.js","components/Navbars/Navbar.js","components/Footer/Footer.js","components/Sidebar/Sidebar.js","layouts/Admin.js","index.js"],"names":["SummaryCard","props","data","title","subtitle","isLoading","success","errorMessage","Highcharts","setOptions","lang","numericSymbols","HighchartsExporting","ExportData","options","chart","type","text","toUpperCase","xAxis","categories","dateArray","yAxis","yAxisText","plotOptions","line","dataLabels","enabled","enableMouseTracking","series","marker","seriesData","Card","className","CardBody","color","height","width","highcharts","RangeDatePicker","DATE_FORMAT","state","startDate","endDate","onDateChange","handleStartDateChange","bind","handleEndDateChange","this","value","Date","setState","sendCallback","classNames","Row","Col","md","size","selected","onChange","dropdownMode","dateFormat","maxDate","React","Component","axios","create","baseURL","responseType","ENDPOINT_LOYALTY_TRANSACTIONS","ENDPOINT_RESELLERS","ENDPOINT_ORDERS","ENDPOINT_REVENUE","ENDPOINT_BRAND_DATA","SUMMARY_PAGE_END_POINTS","USERS_PAGE_END_POINTS","header","getLoyaltyTransactionData","endPoint","selectedResellerIds","a","API","post","then","response","retVal","parseResponse","catch","error","message","getYAxisText","responseData","brandCounts","forEach","item","brandId","count","push","getBrandDataForDisplay","goldArray","silverArray","bronzeArray","i","datapoint","_id","tiers","length","tierMap","Map","tier","set","tierId","total","get","name","getDataForDisplay","getMatchStringForReseller","inputString","getDifferenceInDays","date1","date2","undefined","Math","floor","Summary","initialStartDate","setDate","getDate","initialEndDate","useState","pointsData","setPointsData","revenueData","setRevenueData","ordersData","setOrdersData","resellerData","setResellersData","setStartDate","setEndDate","useEffect","setData","toISOString","alert","Object","keys","AsyncMulti","hitApi","minSearchTextLength","onItemChange","MIN_SEARCH_TEXT_THRESHOLD","isMulti","cacheOptions","defaultOptions","placeholder","items","selectedItems","map","loadOptions","inputValue","isEmpty","Promise","resolve","console","log","isArray","isFixed","label","filterColors","BarCard","crosshair","min","tooltip","headerFormat","pointFormat","footerFormat","shared","useHTML","column","pointPadding","borderWidth","brandData","setBrandData","setSelectedResellerIds","getChartData","Button","onClick","style","backgroundColor","routes","path","icon","component","layout","UserLevelSummary","Header","isOpen","setIsOpen","setColor","sidebarToggle","useRef","location","useLocation","updateColor","window","innerWidth","addEventListener","document","documentElement","indexOf","classList","toggle","current","Navbar","pathname","expand","Container","fluid","ref","NavbarBrand","href","brandName","prop","key","getBrand","NavbarToggler","Footer","ps","default","getYear","Sidebar","sidebar","navigator","platform","PerfectScrollbar","suppressScrollX","suppressScrollY","destroy","bgColor","activeColor","Nav","routeName","pro","to","activeClassName","Dashboard","mainPanel","body","scrollTop","scrollingElement","ReactDOM","render","Admin","getElementById"],"mappings":"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","file":"static/js/main.11fef909.chunk.js","sourcesContent":["import {Card, CardBody, CardFooter} from \"reactstrap\";\nimport React from 'react'\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\nimport HighchartsExporting from 'highcharts/modules/exporting'\nimport ExportData from 'highcharts/modules/export-data'\nimport Loader from \"react-loader-spinner\";\n\n\nexport const SummaryCard = (props) => {\n    const {data, title = '', subtitle = '', isLoading = true} = props || {}\n    const {success, errorMessage} = data || {}\n    //Add exporting module.\n    //This will aad export feature.\n    if (typeof Highcharts === 'object') {\n        Highcharts.setOptions({\n            lang: {\n                numericSymbols: [' K', ' M', ' B', ' T']\n            }\n        });\n        HighchartsExporting(Highcharts)\n        ExportData(Highcharts);\n    }\n    const options = {\n        chart: {\n            type: 'line'\n        },\n        title: {\n            text: title.toUpperCase()\n        },\n        subtitle: {\n            text: subtitle\n        },\n        xAxis: {\n            categories: data.dateArray//['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n        },\n        yAxis: {\n            title: {\n                text: data.yAxisText\n            }\n        },\n        plotOptions: {\n            line: {\n                dataLabels: {\n                    enabled: false\n                },\n                enableMouseTracking: true\n            },\n            series: {\n                marker: {\n                    enabled: true\n                }\n            }\n        },\n        series: data.seriesData\n    }\n\n    return (\n        <Card className=\"card-chart\">\n            <CardBody>\n\n                {isLoading &&\n                <table>\n                    <tr>\n                        <td><Loader\n                            type=\"Grid\"\n                            color=\"#00BFFF\"\n                            height={10}\n                            width={10}\n                        /></td>\n                        <td>&nbsp;&nbsp;Please wait while we fetch data.</td>\n                    </tr>\n                </table>\n                }\n\n                {\n                    !success &&  !isLoading && errorMessage &&\n                        <div>\n                            {errorMessage}\n                        </div>\n                }\n\n                {!isLoading && success &&\n                <HighchartsReact\n                    highcharts={Highcharts}\n                    options={options}\n                />\n                }\n            </CardBody>\n            {/* <CardHeader>\n                <CardTitle tag=\"h5\">{title}</CardTitle>\n                <p className=\"card-category\">{subtitle}</p>\n            </CardHeader>\n            <CardBody>\n                <Line\n                    data={dashboardNASDAQChart.data}\n                    options={dashboardNASDAQChart.options}\n                    width={400}\n                    height={100}\n                />\n                <HighchartsReact\n                    highcharts={Highcharts}\n                    options={options}\n                />\n            </CardBody>\n            <CardFooter>\n                <div className=\"chart-legend\">\n                    <i className=\"fa fa-circle text-info\" /> Tesla Model S{\" \"}\n                    <i className=\"fa fa-circle text-warning\" /> BMW 5 Series\n                </div>\n                <hr />\n                <div className=\"card-stats\">\n                    <i className=\"fa fa-check\" /> Data information certified\n                </div>\n            </CardFooter>*/}\n        </Card>\n    )\n}\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport {\n    InputGroup,\n    DatePicker,\n    InputGroupAddon,\n    InputGroupText\n} from \"shards-react\";\n\nimport \"../../assets/css/range-date-picker.css\";\nimport {Col, Row,} from \"reactstrap\";\n\nclass RangeDatePicker extends React.Component {\n    DATE_FORMAT = 'dd-MM-yyyy';\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            startDate: props.startDate,\n            endDate: props.endDate,\n            onDateChange: props.onDateChange\n        };\n\n\n        this.handleStartDateChange = this.handleStartDateChange.bind(this);\n        this.handleEndDateChange = this.handleEndDateChange.bind(this);\n    }\n\n    sendCallback(startDate, endDate) {\n        if (this.state.onDateChange) {\n            this.state.onDateChange(startDate, endDate);\n        }\n    }\n\n    handleStartDateChange(value) {\n        const startDate = new Date(value);\n        const endDate = this.state.endDate;\n        this.setState({\n            ...this.state,\n            ...{startDate}\n        });\n\n        //send callback if required.\n        this.sendCallback({startDate, endDate});\n    }\n\n    handleEndDateChange(value) {\n        const endDate = new Date(value);\n        const startDate = this.state.startDate;\n        this.setState({\n            ...this.state,\n            ...{endDate}\n        });\n\n        //send callback if required.\n        this.sendCallback({startDate, endDate});\n    }\n\n    render() {\n        const {className} = this.props;\n        const classes = classNames(className, \"d-flex\", \"my-auto\", \"date-range\");\n\n        return (\n            <Row>\n                <Col md=\"6\">\n                    <span>Start Date &nbsp; </span>\n                    <DatePicker\n                        size=\"sm\"\n                        selected={this.state.startDate}\n                        onChange={this.handleStartDateChange}\n                        dropdownMode=\"select\"\n                        className=\"text-center\"\n                        dateFormat={this.DATE_FORMAT}\n                        maxDate={new Date()}\n                    />\n\n                </Col>\n                <Col md=\"6\">\n                    <span>End Date &nbsp; </span>\n                    <DatePicker\n                        size=\"sm\"\n                        selected={this.state.endDate}\n                        onChange={this.handleEndDateChange}\n                        dropdownMode=\"select\"\n                        className=\"text-center\"\n                        dateFormat={this.DATE_FORMAT}\n                        maxDate={new Date()}\n                    />\n                </Col>\n            </Row>\n        );\n    }\n}\n\nexport default RangeDatePicker;\n","import axios from \"axios\";\n\nexport default axios.create({\n    baseURL: 'https://raena.shrikshel.in/api/',\n    responseType: \"json\"\n});\n","export const TIER_GOLD = 'bf645e97-8a48-4977-8367-e987489760f9';\nexport const TIER_SILVER = '8eb95d6e-915a-4a91-9c12-fa43db995e19';\nexport const TIER_BRONZE = '07030fbe-5801-4318-9e97-fe33fa169894';\nexport const DEFAULT_HEADER = {'Access-Control-Allow-Origin': '*'}\nexport const ENDPOINT_LOYALTY_TRANSACTIONS = 'resellers/loyaltyTransactions';\nexport const ENDPOINT_RESELLERS = 'resellers/resellers';\nexport const ENDPOINT_ORDERS = 'resellers/orders';\nexport const ENDPOINT_REVENUE = 'resellers/revenue';\nexport const ENDPOINT_BRAND_DATA = 'resellers/brands';\nexport const MIN_SEARCH_LENGTH_FOR_RESELLER = 3;\n\nexport const SUMMARY_PAGE_END_POINTS = [\n    ENDPOINT_LOYALTY_TRANSACTIONS,\n    ENDPOINT_RESELLERS,\n    ENDPOINT_ORDERS,\n    ENDPOINT_REVENUE\n]\n\nexport const USERS_PAGE_END_POINTS = [\n    ENDPOINT_LOYALTY_TRANSACTIONS,\n    ENDPOINT_ORDERS,\n    ENDPOINT_REVENUE,\n    ENDPOINT_BRAND_DATA\n]\n","import API from \"../network/api/API\";\nimport * as Constants from '../constants'\nimport {getBrandDataForDisplay, getDataForDisplay} from \"./SummaryUtils\";\nimport {\n    ENDPOINT_BRAND_DATA,\n    ENDPOINT_LOYALTY_TRANSACTIONS,\n    ENDPOINT_ORDERS,\n    ENDPOINT_RESELLERS,\n    ENDPOINT_REVENUE\n} from \"../constants\";\n\nlet header = Constants.DEFAULT_HEADER;\n\nexport const getLoyaltyTransactionData = async (startDate, endDate, endPoint, selectedResellerIds) => {\n    let retVal;\n    await API.post(endPoint,\n        {startDate, endDate, selectedResellerIds},\n        {header})\n        .then(response => {\n            retVal = parseResponse(response, endPoint)\n        })\n        .catch(error => {\n            retVal = {success: false, errorMessage: error.message}\n        })\n    return retVal;\n}\n\nconst parseResponse = (response, endPoint) => {\n    let retVal;\n    const yAxisText = getYAxisText(endPoint);\n    if (endPoint === ENDPOINT_BRAND_DATA) {\n        let {categories, brandCounts} = getBrandDataForDisplay(response);\n        retVal = {categories, brandCounts, yAxisText, success: 'true'}\n    } else {\n        let {dateArray, seriesData} = getDataForDisplay(response);\n        retVal = {dateArray, seriesData, yAxisText, success: 'true'}\n    }\n    return retVal;\n}\n\nconst getYAxisText = (endPoint) => {\n    switch (endPoint) {\n        case  ENDPOINT_LOYALTY_TRANSACTIONS:\n            return 'Points'\n        case   ENDPOINT_RESELLERS:\n            return 'Reseller Count'\n        case  ENDPOINT_ORDERS:\n            return 'Order Count'\n        case ENDPOINT_REVENUE:\n            return 'Amount'\n        case ENDPOINT_BRAND_DATA:\n            return 'Brands Amount'\n        default:\n            return ''\n    }\n}\n\nexport const getMatchStringForReseller = async (inputString) => {\n    let retVal;\n    await API.get('/resellers/all/' + inputString,\n        {header})\n        .then(response => {\n            const {data} = response || {}\n            retVal = data;\n        })\n        .catch(error => {\n            retVal = {success: false, errorMessage: error.message}\n        })\n    return retVal;\n}\n","import * as Constants from \"../constants\";\n\nexport const getDataForDisplay = (response) => {\n    let dateArray = [];\n    let goldArray = [];\n    let silverArray = [];\n    let bronzeArray = [];\n    let i = 0;\n\n    response.data?.forEach(datapoint => {\n        if (datapoint._id && datapoint.tiers.length) {\n            dateArray[i] = datapoint._id;\n            let tierMap = new Map();\n            datapoint.tiers.forEach(tier => {\n                tierMap.set(tier.tierId, tier.total);\n            });\n            goldArray[i] = tierMap.get(Constants.TIER_GOLD) || 0;\n            silverArray[i] = tierMap.get(Constants.TIER_SILVER) || 0;\n            bronzeArray[i] = tierMap.get(Constants.TIER_BRONZE) || 0;\n            i++;\n\n        }\n    });\n    const seriesData = [\n        {\n            name: 'Gold',\n            data: goldArray\n        },\n        {\n            name: 'Silver',\n            data: silverArray\n        },\n        {\n            name: 'bronze',\n            data: bronzeArray\n        }\n    ];\n    return {dateArray, seriesData};\n}\n\nexport const getBrandDataForDisplay = (response) => {\n    const {data:responseData} = response || []\n    let categories = [];\n    let brandCounts = [];\n    responseData.forEach(item => {\n        const {brandId, count} = item || {}\n        categories.push(brandId);\n        brandCounts.push(count);\n    })\n\n    return {categories, brandCounts};\n}\n","export const getDifferenceInDays = (date1, date2) => {\n    if (date1 === undefined || date2 === undefined){\n        return -1\n    }\n    const diffInMs = Math.floor(date2 - date1);\n    return diffInMs / (1000 * 60 * 60 * 24);\n}\n","import React, {useEffect, useState} from \"react\";\nimport {Col, Row,} from \"reactstrap\";\nimport {SummaryCard} from \"../components/Summary/SummaryCard\";\nimport RangeDatePicker from \"../components/common/RangeDatePicker\";\nimport {getLoyaltyTransactionData} from \"../Utils/ApiUtils\";\n\nimport {\n    ENDPOINT_LOYALTY_TRANSACTIONS,\n    ENDPOINT_ORDERS,\n    ENDPOINT_RESELLERS,\n    ENDPOINT_REVENUE,\n    SUMMARY_PAGE_END_POINTS\n} from \"../constants\";\nimport {getDifferenceInDays} from \"../Utils/DateUtils\";\n\nexport const Summary = () => {\n    //Initialize date.\n    const MAX_DATE_DIFF = 30\n    const initialStartDate = new Date(new Date().setDate(new Date().getDate() - MAX_DATE_DIFF));\n    const initialEndDate = new Date();\n\n    const [pointsData, setPointsData] = useState({})\n    const [revenueData, setRevenueData] = useState({})\n    const [ordersData, setOrdersData] = useState({})\n    const [resellerData, setResellersData] = useState({})\n    const [startDate, setStartDate] = useState(initialStartDate);\n    const [endDate, setEndDate] = useState(initialEndDate);\n\n    useEffect(() => {\n        function setData(response, endPoint) {\n            switch (endPoint) {\n                case  ENDPOINT_LOYALTY_TRANSACTIONS:\n                    setPointsData(response);\n                    break;\n                case   ENDPOINT_RESELLERS:\n                    setResellersData(response);\n                    break;\n                case  ENDPOINT_ORDERS:\n                    setOrdersData(response);\n                    break;\n                case ENDPOINT_REVENUE:\n                    setRevenueData(response);\n                    break;\n            }\n        }\n\n        SUMMARY_PAGE_END_POINTS.forEach(endPoint => {\n            getLoyaltyTransactionData(startDate, endDate, endPoint, []).then(response => {\n                setData(response, endPoint);\n            })\n        })\n    }, [startDate, endDate]);\n\n    function resetData() {\n        setRevenueData({});\n        setResellersData({});\n        setOrdersData({});\n        setPointsData({})\n    }\n\n    const onDateChange = ({startDate, endDate}) => {\n        if (endDate && startDate) {\n            const diffInDays = getDifferenceInDays(startDate, endDate);\n\n            if (diffInDays >= 0) {\n                setStartDate(startDate.toISOString());\n                setEndDate(endDate.toISOString());\n                resetData();\n            }else{\n                alert(\"end Date always greater than equal start Date\")\n            }\n        }\n    }\n\n    return (\n        <>\n            <div className=\"content\">\n\n                <RangeDatePicker onDateChange={onDateChange} startDate={startDate} endDate={endDate}/>\n\n                <span>&nbsp;&nbsp;</span>\n                <Row>\n                    <Col md=\"6\">\n                        <SummaryCard\n                            data={pointsData}\n                            title={'Points Generated'}\n                            subtitle={''}\n                            isLoading={Object.keys(pointsData).length === 0}/>\n                    </Col>\n                    <Col md=\"6\">\n                        <SummaryCard data={revenueData}\n                                     title={'Revenue'}\n                                     subtitle={''}\n                                     isLoading={Object.keys(revenueData).length === 0}/>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col md=\"6\">\n                        <SummaryCard\n                            data={ordersData}\n                            title={'Orders'}\n                            subtitle={''}\n                            isLoading={Object.keys(ordersData).length === 0}\n                        />\n                    </Col>\n                    <Col md=\"6\">\n                        <SummaryCard\n                            data={resellerData}\n                            title={'Transacting Users'}\n                            subtitle={''}\n                            isLoading={Object.keys(resellerData).length === 0}\n                        />\n                    </Col>\n                </Row>\n            </div>\n        </>\n    );\n}\n\nexport default Summary;\n\n","import React from 'react';\n\nimport AsyncSelect from 'react-select/async';\nimport {isArray, isEmpty} from 'lodash'\n\nconst AsyncMulti = ({hitApi, minSearchTextLength, onItemChange}) => {\n    const MIN_SEARCH_TEXT_THRESHOLD = minSearchTextLength ? minSearchTextLength : 1;\n\n    const filterColors = (inputValue) => {\n        // Handle Fail\n        if (!hitApi) {\n            console.log('Not API end point is defined. Pass function to this component to Hit API')\n        }\n        //Hit API\n        return hitApi(inputValue).then(response => {\n            if (isArray(response) && response.length > 0) {\n                return response.map(item => {\n                    return {\n                        color: \"#00B8D9\",\n                        isFixed: true,\n                        label: item,\n                        value: item\n                    }\n                });\n            }\n        });\n    };\n\n    const promiseOptions = (inputValue) => {\n        //Do not fetch data if search Item length is less the threshold\n        if (isEmpty(inputValue) || inputValue.length < MIN_SEARCH_TEXT_THRESHOLD) {\n            return;\n        }\n\n        return new Promise((resolve) => {\n            resolve(filterColors(inputValue));\n        });\n    }\n\n    const handleOnChange = (items) => {\n        const selectedItems = items.map(item => item.value)\n        onItemChange(selectedItems);\n    };\n\n    return (\n        <AsyncSelect\n            isMulti\n            cacheOptions\n            defaultOptions\n            placeholder={'Min ' + MIN_SEARCH_TEXT_THRESHOLD + ' char required to search'}\n            onChange={handleOnChange}\n            loadOptions={promiseOptions}\n        />\n    );\n\n}\n\nexport default AsyncMulti;\n","import {Card, CardBody, CardFooter} from \"reactstrap\";\nimport React from 'react'\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\nimport HighchartsExporting from 'highcharts/modules/exporting'\nimport ExportData from 'highcharts/modules/export-data'\nimport Loader from \"react-loader-spinner\";\n\n\nexport const BarCard = (props) => {\n    const {data, title = '', subtitle = '', isLoading = true} = props || {}\n    const {categories, brandCounts, yAxisText} = data || {}\n    const {success, errorMessage} = data || {}\n    //Add exporting module.\n    //This will aad export feature.\n    if (typeof Highcharts === 'object') {\n        Highcharts.setOptions({\n            lang: {\n                numericSymbols: [' Th', ' M', ' B', ' T']\n            }\n        });\n        HighchartsExporting(Highcharts)\n        ExportData(Highcharts);\n    }\n    const options = {\n        chart: {\n            type: 'column'\n        },\n        title: {\n            text: title.toUpperCase()\n        },\n        subtitle: {\n            text: subtitle\n        },\n        xAxis: {\n            categories,\n            crosshair: true\n        },\n        yAxis: {\n            min: 0,\n            title: {\n                text: yAxisText\n            }\n        },\n        tooltip: {\n            headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\n            pointFormat: '<tr><td style=\"color:{series.color};padding:0\">Amount:&nbsp;</td>' +\n                '<td style=\"padding:0\"><b>{point.y}</b></td></tr>',\n            footerFormat: '</table>',\n            shared: true,\n            useHTML: true\n        },\n        plotOptions: {\n            column: {\n                pointPadding: 0.2,\n                borderWidth: 0\n            }\n        },\n        series: [{\n            name: 'Brands',\n            data: brandCounts\n\n        }]\n    }\n\n    return (\n        <Card className=\"card-chart\">\n            <CardBody>\n\n                {isLoading &&\n                <table>\n                    <tr>\n                        <td><Loader\n                            type=\"Grid\"\n                            color=\"#00BFFF\"\n                            height={10}\n                            width={10}\n                        /></td>\n                        <td>&nbsp;&nbsp;Please wait while we fetch data.</td>\n                    </tr>\n                </table>\n                }\n\n                {\n                    !success && !isLoading && errorMessage &&\n                    <div>\n                        {errorMessage}\n                    </div>\n                }\n\n                {!isLoading && success &&\n                <HighchartsReact\n                    highcharts={Highcharts}\n                    options={options}\n                />\n                }\n            </CardBody>\n        </Card>\n    )\n}\n","import React, {useEffect, useState} from \"react\";\nimport {Button, Col, Row,} from \"reactstrap\";\nimport {SummaryCard} from \"../components/Summary/SummaryCard\";\nimport RangeDatePicker from \"../components/common/RangeDatePicker\";\nimport {getLoyaltyTransactionData, getMatchStringForReseller} from \"../Utils/ApiUtils\";\n\nimport {\n    ENDPOINT_BRAND_DATA,\n    ENDPOINT_LOYALTY_TRANSACTIONS,\n    ENDPOINT_ORDERS,\n    ENDPOINT_REVENUE,\n    MIN_SEARCH_LENGTH_FOR_RESELLER,\n    USERS_PAGE_END_POINTS\n} from \"../constants\";\nimport {getDifferenceInDays} from \"../Utils/DateUtils\";\nimport AsyncMulti from \"../components/MutiSelect/AsyncMulti\";\nimport {BarCard} from \"../components/Summary/BarCard\";\n\nexport const Summary = () => {\n    //Initialize date.\n    const MAX_DATE_DIFF = 30\n    const initialStartDate = new Date(new Date().setDate(new Date().getDate() - MAX_DATE_DIFF));\n    const initialEndDate = new Date();\n\n    const [pointsData, setPointsData] = useState({})\n    const [revenueData, setRevenueData] = useState({})\n    const [ordersData, setOrdersData] = useState({})\n    const [brandData, setBrandData] = useState({})\n    const [startDate, setStartDate] = useState(initialStartDate);\n    const [endDate, setEndDate] = useState(initialEndDate);\n    const [selectedResellerIds, setSelectedResellerIds] = useState([])\n\n    const setData = (response, endPoint) => {\n        switch (endPoint) {\n            case  ENDPOINT_LOYALTY_TRANSACTIONS:\n                setPointsData(response);\n                break;\n            case   ENDPOINT_BRAND_DATA:\n                setBrandData(response);\n                break;\n            case  ENDPOINT_ORDERS:\n                setOrdersData(response);\n                break;\n            case ENDPOINT_REVENUE:\n                setRevenueData(response);\n                break;\n        }\n    }\n\n    const getChartData = () => {\n        USERS_PAGE_END_POINTS.forEach(endPoint => {\n            getLoyaltyTransactionData(startDate, endDate, endPoint, selectedResellerIds).then(response => {\n                setData(response, endPoint);\n            })\n        })\n    }\n\n    useEffect(() => {\n        getChartData();\n    }, []);\n\n\n    function resetData() {\n        setRevenueData({});\n        setBrandData({});\n        setOrdersData({});\n        setPointsData({})\n    }\n\n    const onDateChange = ({startDate, endDate}) => {\n        if (endDate && startDate) {\n            const diffInDays = getDifferenceInDays(startDate, endDate);\n\n            if (diffInDays >= 0) {\n                setStartDate(startDate.toISOString());\n                setEndDate(endDate.toISOString());\n            } else {\n                alert(\"end Date always greater than equal start Date\");\n            }\n        }\n    }\n\n    const hitApi = async (inputString) => {\n        return await getMatchStringForReseller(inputString);\n    }\n\n    const onResellerItemChange = (selectedItems) => {\n        setSelectedResellerIds(selectedItems);\n    }\n\n    const onSubmitButtonClick = () => {\n        resetData();\n        getChartData();\n    }\n\n    return (\n        <>\n            <div className=\"content\">\n                <Row>\n                    <Col md=\"6\">\n                        <RangeDatePicker onDateChange={onDateChange} startDate={startDate} endDate={endDate}/>\n                    </Col>\n                    <Col md=\"3\">\n                        <span>&nbsp;Search a Reseller ID &nbsp; </span>\n                        <AsyncMulti\n                            hitApi={hitApi}\n                            minSearchTextLength={MIN_SEARCH_LENGTH_FOR_RESELLER}\n                            onItemChange={onResellerItemChange}\n                        />\n                    </Col>\n                    <Col md=\"3\">\n                        <Button\n                            onClick={onSubmitButtonClick}\n                            color=\"primary\">SUBMIT</Button>\n                    </Col>\n                </Row>\n                <hr\n                    style={{\n                        color: 'rgba(0,0,0,0.02)',\n                        backgroundColor: 'rgba(0,0,0,0.03)',\n                        height: 1\n                    }}\n                />\n                <span>&nbsp;&nbsp;</span>\n                <Row>\n                    <Col md=\"6\">\n                        <SummaryCard\n                            data={pointsData}\n                            title={'Points Generated'}\n                            subtitle={''}\n                            isLoading={Object.keys(pointsData).length === 0}/>\n                    </Col>\n                    <Col md=\"6\">\n                        <SummaryCard data={revenueData}\n                                     title={'Revenue'}\n                                     subtitle={''}\n                                     isLoading={Object.keys(revenueData).length === 0}/>\n                    </Col>\n\n                </Row>\n\n                <Row>\n                    <Col md=\"6\">\n                        <SummaryCard\n                            data={ordersData}\n                            title={'Orders'}\n                            subtitle={''}\n                            isLoading={Object.keys(ordersData).length === 0}\n                        />\n                    </Col>\n                    <Col md=\"6\">\n                        <BarCard\n                            data={brandData}\n                            title={'Revenue by brand'}\n                            subtitle={''}\n                            isLoading={Object.keys(brandData).length === 0}\n                        />\n                    </Col>\n                </Row>\n            </div>\n        </>\n    );\n}\n\nexport default Summary;\n\n","import Summary from \"views/Summary.js\";\nimport UserLevelSummary from \"./views/UserLevelSummary\";\nimport BrandLevelSummary from \"./views/BrandLevelSummary\";\n\nvar routes = [\n  {\n    path: \"/dashboard\",\n    name: \"Summary\",\n    icon: \"nc-icon nc-chart-bar-32\",\n    component: Summary,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/user/summary\",\n    name: \"Users\",\n    icon: \"nc-icon nc-single-02\",\n    component: UserLevelSummary,\n    layout: \"/admin\",\n  },\n  /*{\n    path: \"/brand/summary\",\n    name: \"Brands\",\n    icon: \"nc-icon nc-bold\",\n    component: BrandLevelSummary,\n    layout: \"/admin\",\n  },*/\n];\nexport default routes;\n","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Container,\n  InputGroup,\n  InputGroupText,\n  InputGroupAddon,\n  Input,\n} from \"reactstrap\";\n\nimport routes from \"routes.js\";\n\nfunction Header(props) {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [dropdownOpen, setDropdownOpen] = React.useState(false);\n  const [color, setColor] = React.useState(\"transparent\");\n  const sidebarToggle = React.useRef();\n  const location = useLocation();\n  const toggle = () => {\n    if (isOpen) {\n      setColor(\"transparent\");\n    } else {\n      setColor(\"dark\");\n    }\n    setIsOpen(!isOpen);\n  };\n  const dropdownToggle = (e) => {\n    setDropdownOpen(!dropdownOpen);\n  };\n  const getBrand = () => {\n    let brandName = \"Default Brand\";\n    routes.map((prop, key) => {\n      if (window.location.href.indexOf(prop.layout + prop.path) !== -1) {\n        brandName = prop.name;\n      }\n      return null;\n    });\n    return brandName;\n  };\n  const openSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    sidebarToggle.current.classList.toggle(\"toggled\");\n  };\n  // function that adds color dark/transparent to the navbar on resize (this is for the collapse)\n  const updateColor = () => {\n    if (window.innerWidth < 993 && isOpen) {\n      setColor(\"dark\");\n    } else {\n      setColor(\"transparent\");\n    }\n  };\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", updateColor.bind(this));\n  });\n  React.useEffect(() => {\n    if (\n      window.innerWidth < 993 &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n      sidebarToggle.current.classList.toggle(\"toggled\");\n    }\n  }, [location]);\n  return (\n    // add or remove classes depending if we are on full-screen-maps page or not\n    <Navbar\n      color={\n        props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n          ? \"dark\"\n          : color\n      }\n      expand=\"lg\"\n      className={\n        props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n          ? \"navbar-absolute fixed-top\"\n          : \"navbar-absolute fixed-top \" +\n            (color === \"transparent\" ? \"navbar-transparent \" : \"\")\n      }\n    >\n      <Container fluid>\n        <div className=\"navbar-wrapper\">\n          <div className=\"navbar-toggle\">\n            <button\n              type=\"button\"\n              ref={sidebarToggle}\n              className=\"navbar-toggler\"\n              onClick={() => openSidebar()}\n            >\n              <span className=\"navbar-toggler-bar bar1\" />\n              <span className=\"navbar-toggler-bar bar2\" />\n              <span className=\"navbar-toggler-bar bar3\" />\n            </button>\n          </div>\n          <NavbarBrand href=\"/\">{getBrand()}</NavbarBrand>\n        </div>\n        <NavbarToggler onClick={toggle}>\n          <span className=\"navbar-toggler-bar navbar-kebab\" />\n          <span className=\"navbar-toggler-bar navbar-kebab\" />\n          <span className=\"navbar-toggler-bar navbar-kebab\" />\n        </NavbarToggler>\n       {/* <Collapse isOpen={isOpen} navbar className=\"justify-content-end\">\n          <form>\n            <InputGroup className=\"no-border\">\n              <Input placeholder=\"Search...\" />\n              <InputGroupAddon addonType=\"append\">\n                <InputGroupText>\n                  <i className=\"nc-icon nc-zoom-split\" />\n                </InputGroupText>\n              </InputGroupAddon>\n            </InputGroup>\n          </form>\n          <Nav navbar>\n            <NavItem>\n              <Link to=\"#pablo\" className=\"nav-link btn-magnify\">\n                <i className=\"nc-icon nc-layout-11\" />\n                <p>\n                  <span className=\"d-lg-none d-md-block\">Stats</span>\n                </p>\n              </Link>\n            </NavItem>\n            <Dropdown\n              nav\n              isOpen={dropdownOpen}\n              toggle={(e) => dropdownToggle(e)}\n            >\n              <DropdownToggle caret nav>\n                <i className=\"nc-icon nc-bell-55\" />\n                <p>\n                  <span className=\"d-lg-none d-md-block\">Some Actions</span>\n                </p>\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem tag=\"a\">Action</DropdownItem>\n                <DropdownItem tag=\"a\">Another Action</DropdownItem>\n                <DropdownItem tag=\"a\">Something else here</DropdownItem>\n              </DropdownMenu>\n            </Dropdown>\n            <NavItem>\n              <Link to=\"#pablo\" className=\"nav-link btn-rotate\">\n                <i className=\"nc-icon nc-settings-gear-65\" />\n                <p>\n                  <span className=\"d-lg-none d-md-block\">Account</span>\n                </p>\n              </Link>\n            </NavItem>\n          </Nav>\n        </Collapse>*/}\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default Header;\n","\n/*eslint-disable*/\nimport React from \"react\";\nimport { Container, Row } from \"reactstrap\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nfunction Footer(props) {\n  return (\n    <footer className={\"footer\" + (props.default ? \" footer-default\" : \"\")}>\n      <Container fluid={props.fluid}>\n        <Row>\n          <div className=\"credits ml-auto\">\n            <div className=\"copyright\">\n              &copy; {1900 + new Date().getYear()}, made with{\" \"}\n              <i className=\"fa fa-heart heart\" /> by Raena\n            </div>\n          </div>\n        </Row>\n      </Container>\n    </footer>\n  );\n}\n\nFooter.propTypes = {\n  default: PropTypes.bool,\n  fluid: PropTypes.bool,\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Nav } from \"reactstrap\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\nvar ps;\n\nfunction Sidebar(props) {\n  const sidebar = React.useRef();\n  // verifies if routeName is the one active (in browser input)\n  const activeRoute = (routeName) => {\n    return props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  };\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(sidebar.current, {\n        suppressScrollX: true,\n        suppressScrollY: false,\n      });\n    }\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n      }\n    };\n  });\n  return (\n    <div\n      className=\"sidebar\"\n      data-color={props.bgColor}\n      data-active-color={props.activeColor}\n    >\n      <div className=\"logo\">\n        <a\n          href=\"https://www.creative-tim.com\"\n          className=\"simple-text logo-mini\"\n        >\n          <div className=\"nc-icon nc-sound-wave\">\n\n          </div>\n        </a>\n        <a className=\"simple-text\">Raena Dashboard</a>\n      </div>\n      <div className=\"sidebar-wrapper\" ref={sidebar}>\n        <Nav>\n          {props.routes.map((prop, key) => {\n            return (\n              <li\n                className={\n                  activeRoute(prop.path) + (prop.pro ? \" active-pro\" : \"\")\n                }\n                key={key}\n              >\n                <NavLink\n                  to={prop.layout + prop.path}\n                  className=\"nav-link\"\n                  activeClassName=\"active\"\n                >\n                  <i className={prop.icon} />\n                  <p>{prop.name}</p>\n                </NavLink>\n              </li>\n            );\n          })}\n        </Nav>\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","/*!\n\n=========================================================\n* Paper Summary React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/main/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport { Route, Switch, useLocation } from \"react-router-dom\";\n\nimport DemoNavbar from \"components/Navbars/Navbar.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\n\nimport routes from \"routes.js\";\n\nvar ps;\n\nfunction Dashboard(props) {\n  const [backgroundColor, setBackgroundColor] = React.useState(\"black\");\n  const [activeColor, setActiveColor] = React.useState(\"info\");\n  const mainPanel = React.useRef();\n  const location = useLocation();\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(mainPanel.current);\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n        document.body.classList.toggle(\"perfect-scrollbar-on\");\n      }\n    };\n  });\n  React.useEffect(() => {\n    mainPanel.current.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n  }, [location]);\n  const handleActiveClick = (color) => {\n    setActiveColor(color);\n  };\n  const handleBgClick = (color) => {\n    setBackgroundColor(color);\n  };\n  return (\n    <div className=\"wrapper\">\n      <Sidebar\n        {...props}\n        routes={routes}\n        bgColor={backgroundColor}\n        activeColor={activeColor}\n      />\n      <div className=\"main-panel\" ref={mainPanel}>\n        <DemoNavbar {...props} />\n        <Switch>\n          {routes.map((prop, key) => {\n            return (\n              <Route\n                path={prop.layout + prop.path}\n                component={prop.component}\n                key={key}\n              />\n            );\n          })}\n        </Switch>\n        <Footer fluid />\n      </div>\n      {/*<FixedPlugin\n        bgColor={backgroundColor}\n        activeColor={activeColor}\n        handleActiveClick={handleActiveClick}\n        handleBgClick={handleBgClick}\n      />*/}\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {HashRouter, Route, Switch, Redirect} from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"assets/scss/paper-dashboard.scss?v=1.3.0\";\nimport \"assets/demo/demo.css\";\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\n\nimport AdminLayout from \"layouts/Admin.js\";\n\nReactDOM.render(\n    <HashRouter>\n        <Switch>\n            <Route path=\"/admin\" render={(props) => <AdminLayout {...props} />}/>\n            <Redirect to=\"/admin/dashboard\"/>\n        </Switch>\n    </HashRouter>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}